version: '3.8'

services:
  website:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cloudflow-website
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - cloudflow-network
      
  # Nginx Exporter for monitoring Nginx
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: cloudflow-nginx-exporter
    command:
      - -nginx.scrape-uri=http://website:80/stub_status
    ports:
      - "9113:9113"
    depends_on:
      - website
    networks:
      - cloudflow-network
  
  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: cloudflow-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - cloudflow-network

  # Add Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: cloudflow-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - cloudflow-network

  # Add Grafana for dashboard visualizations
  grafana:
    image: grafana/grafana:latest
    container_name: cloudflow-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - cloudflow-network

networks:
  cloudflow-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: